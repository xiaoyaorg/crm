package com.bjpowernode.crm.workbench.mapper;

import com.bjpowernode.crm.workbench.domain.Activity;
import com.bjpowernode.crm.workbench.domain.FunnelA;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Select;

import java.util.List;
import java.util.Map;

public interface ActivityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Fri Mar 31 21:25:54 CST 2023
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Fri Mar 31 21:25:54 CST 2023
     */
    int insertActivity(Activity activity);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Fri Mar 31 21:25:54 CST 2023
     */
    int insertSelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Fri Mar 31 21:25:54 CST 2023
     */
    Activity selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Fri Mar 31 21:25:54 CST 2023
     */
    int updateByPrimaryKeySelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Fri Mar 31 21:25:54 CST 2023
     */
    int updateByPrimaryKey(Activity record);

    List<Activity> selectActivityByConditionForPage(Map<String,Object> map);

    int selectCountOfActivityByCondition(Map<String,Object> map);

    int deleteActivityByIds(@Param("ids") String[] ids);

    Activity selectActivityById(String id);

    int updateActivity(Activity activity);

    List<Activity> selectAllActivitys();

    List<Activity> selectActivityByIds(@Param("ids") String[] ids);

    int insertActivityByList(List<Activity> activityList);

    Activity selectActivityForDetailById(String id);

    List<Activity> selectActivityForDetailByClueId(String clueId);

    List<Activity> selectActivityForDetailByNameClueId(Map<String,Object> map);

    List<Activity> selectActivityForDetailByIds(@Param("ids") String[] ids);

    List<Activity> selectActivityForConvertByNameClueId(Map<String,Object> map);

    List<Activity> selectActivityByName(String name);

    String selectActivityNameById(String id);

    List<Activity> selectActivityForDetailByNameContactsId(Map<String,Object> map);

    List<Activity> selectActivityByContactsId(String contactsId);
}